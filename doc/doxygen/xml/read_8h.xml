<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="read_8h" kind="file" language="C++">
    <compoundname>read.h</compoundname>
    <includes refid="type_8h" local="yes">file/type.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cerrno</includes>
    <includes refid="error_8h" local="no">file/error.h</includes>
    <includedby refid="stream_8h" local="no">include/file/stream.h</includedby>
    <incdepgraph>
      <node id="9">
        <label>file/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/file/read.h</label>
        <link refid="read_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>file/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cerrno</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="10">
        <label>exception/error.h</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/file/read.h</label>
        <link refid="read_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/file/stream.h</label>
        <link refid="stream_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classFile_1_1ReadError" prot="public">File::ReadError</innerclass>
    <innerclass refid="structFile_1_1ReadError_1_1OpenFailure" prot="public">File::ReadError::OpenFailure</innerclass>
    <innerclass refid="structFile_1_1ReadError_1_1ReadFailure" prot="public">File::ReadError::ReadFailure</innerclass>
    <innerclass refid="classFile_1_1Detail_1_1ReadFunction" prot="public">File::Detail::ReadFunction</innerclass>
    <innernamespace refid="namespaceFile">File</innernamespace>
    <innernamespace refid="namespaceFile_1_1Detail">File::Detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">file/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="error_8h" kindref="compound">file/error.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceFile" kindref="compound">File</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classFile_1_1ReadError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" kindref="member">ReadError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classFile_1_1Error_1af349939934578319f507885d445bc639" kindref="member">Error</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFile_1_1ReadError_1_1OpenFailure" kindref="compound">OpenFailure</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFile_1_1ReadError_1_1ReadFailure" kindref="compound">ReadFailure</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" kindref="member">ReadError</ref>(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/><ref refid="classFile_1_1Error_1af349939934578319f507885d445bc639" kindref="member">Error</ref>(Namespace(</highlight><highlight class="stringliteral">&quot;ReadError&quot;</highlight><highlight class="normal">,<sp/>message))<sp/>{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structFile_1_1ReadError_1_1OpenFailure" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFile_1_1ReadError_1_1OpenFailure" kindref="compound">ReadError::OpenFailure</ref><sp/>:<sp/><ref refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" kindref="member">ReadError</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="structFile_1_1ReadError_1_1OpenFailure_1a9e15d9af86864220c3725cc4776a3d99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structFile_1_1ReadError_1_1OpenFailure_1a9e15d9af86864220c3725cc4776a3d99" kindref="member">OpenFailure</ref>(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/><ref refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" kindref="member">ReadError</ref>(Message(</highlight><highlight class="stringliteral">&quot;OpenFailure&quot;</highlight><highlight class="normal">,<sp/>message))<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structFile_1_1ReadError_1_1ReadFailure" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFile_1_1ReadError_1_1ReadFailure" kindref="compound">ReadError::ReadFailure</ref><sp/>:<sp/><ref refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" kindref="member">ReadError</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="structFile_1_1ReadError_1_1ReadFailure_1ac9270c103eaea59c5d2ae48774ea4a61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structFile_1_1ReadError_1_1ReadFailure_1ac9270c103eaea59c5d2ae48774ea4a61" kindref="member">ReadFailure</ref>(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>)<sp/>:<sp/><ref refid="classFile_1_1ReadError_1a77be2ef8990e8cff6beacb600ff9cd56" kindref="member">ReadError</ref>(Message(</highlight><highlight class="stringliteral">&quot;ReadFailure&quot;</highlight><highlight class="normal">,<sp/>message))<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38" refid="namespaceFile_1_1Detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceFile_1_1Detail" kindref="compound">Detail</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classFile_1_1Detail_1_1ReadFunction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFile_1_1Detail_1_1ReadFunction" kindref="compound">ReadFunction</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classFile_1_1Detail_1_1ReadFunction_1ab7a0c4902e7e6e326981c237859c87a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceFile_1aaa657f08e5829038ef1ecca83936eb67" kindref="member">ByteSequence</ref><sp/><ref refid="classFile_1_1Detail_1_1ReadFunction_1ab7a0c4902e7e6e326981c237859c87a3" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>stream<sp/>=<sp/>OpenStream(filename);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint64_t<sp/>length<sp/>=<sp/>stream.tellg();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.seekg(0,<sp/>std::ios::beg);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceFile_1ad41b3c50fa291dc63cc956d374029325" kindref="member">Read</ref>(stream,<sp/>length);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>OpenStream(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>stream(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ios::binary<sp/>|<sp/>std::ios::ate</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structFile_1_1ReadError_1_1OpenFailure" kindref="compound">ReadError::OpenFailure</ref>(std::strerror(errno));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="namespaceFile_1aaa657f08e5829038ef1ecca83936eb67" kindref="member">ByteSequence</ref><sp/><ref refid="namespaceFile_1ad41b3c50fa291dc63cc956d374029325" kindref="member">Read</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>&amp;stream,<sp/>std::uint64_t<sp/>length</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceFile_1aaa657f08e5829038ef1ecca83936eb67" kindref="member">ByteSequence</ref><sp/>data(length);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.read(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data.data()),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>length</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ReadError::ReadFailure(std::strerror(errno));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74" refid="namespaceFile_1ad41b3c50fa291dc63cc956d374029325" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceFile_1ad41b3c50fa291dc63cc956d374029325" kindref="member">Read</ref><sp/>=<sp/><ref refid="classFile_1_1Detail_1_1ReadFunction" kindref="compound">Detail::ReadFunction</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="include/file/read.h"/>
  </compounddef>
</doxygen>
