<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structFile_1_1Deserialiser" kind="class" language="C++" prot="public">
    <compoundname>File::Deserialiser</compoundname>
    <includes refid="stream_8h" local="no">stream.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type><ref refid="namespaceFile_1aef8a42b3ab2cd380273518b701b15e8d" kindref="member">Endian</ref></type>
        <declname>E</declname>
        <defname>E</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structFile_1_1Deserialiser_1a9cb6c0916594a3bf59f1d878e76ad4d2" prot="public" static="no">
        <type>T</type>
        <definition>using File::Deserialiser&lt; T, E &gt;::Target =  T</definition>
        <argsstring></argsstring>
        <name>Target</name>
        <qualifiedname>File::Deserialiser::Target</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file/stream.h" line="92" column="3" bodyfile="include/file/stream.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structFile_1_1Deserialiser_1a4ae703228b3fbcbfc817040c103f62e0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="namespaceFile_1aef8a42b3ab2cd380273518b701b15e8d" kindref="member">Endian</ref></type>
        <definition>Endian File::Deserialiser&lt; T, E &gt;::UsedEndian</definition>
        <argsstring></argsstring>
        <name>UsedEndian</name>
        <qualifiedname>File::Deserialiser::UsedEndian</qualifiedname>
        <initializer>= E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file/stream.h" line="92" column="34" bodyfile="include/file/stream.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structFile_1_1Deserialiser_1af3781fcfc451dbb19a7c224f5a766bd9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>File::Deserialiser&lt; T, E &gt;::Deserialiser</definition>
        <argsstring>(Target &amp;target, Stream&lt; UsedEndian &gt; &amp;stream)</argsstring>
        <name>Deserialiser</name>
        <qualifiedname>File::Deserialiser::Deserialiser</qualifiedname>
        <param>
          <type><ref refid="structFile_1_1Deserialiser_1a9cb6c0916594a3bf59f1d878e76ad4d2" kindref="member">Target</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classFile_1_1Stream" kindref="compound">Stream</ref>&lt; <ref refid="structFile_1_1Deserialiser_1a4ae703228b3fbcbfc817040c103f62e0" kindref="member">UsedEndian</ref> &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file/stream.h" line="94" column="12" bodyfile="include/file/stream.h" bodystart="94" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A template for deserializing objects of type T with endianness E. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to deserialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>The endianness to use.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Specialize this template to provide custom deserialization for your types.</para>
<para><simplesect kind="note"><para>The specialization should provide a constructor taking (T&amp;, <ref refid="classFile_1_1Stream" kindref="compound">Stream&lt;E&gt;</ref>&amp;) and a function call operator. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/file/stream.h" line="90" column="1" bodyfile="include/file/stream.h" bodystart="90" bodyend="99"/>
    <listofallmembers>
      <member refid="structFile_1_1Deserialiser_1af3781fcfc451dbb19a7c224f5a766bd9" prot="public" virt="non-virtual"><scope>File::Deserialiser</scope><name>Deserialiser</name></member>
      <member refid="structFile_1_1Deserialiser_1a9cb6c0916594a3bf59f1d878e76ad4d2" prot="public" virt="non-virtual"><scope>File::Deserialiser</scope><name>Target</name></member>
      <member refid="structFile_1_1Deserialiser_1a4ae703228b3fbcbfc817040c103f62e0" prot="public" virt="non-virtual"><scope>File::Deserialiser</scope><name>UsedEndian</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
